services:
  n8n:
    image: n8nio/n8n:1.103.2
    container_name: n8n
    hostname: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - minha_rede

  postgres:
    image: ankane/pgvector
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - minha_rede

  # PGADMIN CONSOME MAIS RECURSOS PORÉM COMPLETO
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   restart: unless-stopped
  #   ports:
  #     - "8081:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: seuemail@exemplo.com
  #     PGADMIN_DEFAULT_PASSWORD: suasenha
  #   depends_on:
  #     - postgres
  #   networks:
  #     - minha_rede

  evolution-api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution-api
    hostname: evolution-api
    restart: always
    ports:
      - 8080:8080
    volumes:
      - lab_evolution_instances:/lab_evolution/instances
    env_file:
      - .env
    networks:
      - minha_rede

  ngrok:
    image: ngrok/ngrok:latest # Usa a imagem oficial do ngrok com a tag "latest" para a versão mais recente
    container_name: ngrok
    hostname: ngrok    
    restart: unless-stopped
    ports:
      - "4040:4040" # Porta para acessar a interface web do ngrok
    env_file:
      - .env # Arquivo de variáveis de ambiente (certifique-se de incluir NGROK_AUTH_TOKEN se necessário)
    depends_on:
      - n8n # Mantém a dependência do serviço n8n
    networks:
      - minha_rede
    command:
      - http
      - --domain=precious-toucan-actual.ngrok-free.app # Domínio personalizado do ngrok
      - n8n:5678 # Aponta para o serviço n8n na porta 5678

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - minha_rede

#  adminer:
#    image: adminer
#    container_name: adminer
#    restart: unless-stopped
#    ports:
#      - "8081:8080"
#    depends_on:
#      - postgres
#    networks:
#      - minha_rede

#  ollama:
#    image: ollama/ollama:latest
#    container_name: ollama
#    restart: unless-stopped
#    ports:
#      - "11434:11434"
#    volumes:
#      - ollama_data:/root/.ollama
#    networks:
#      - minha_rede

volumes:
  n8n_data:
  postgres_data:
  lab_evolution_instances:
#  ollama_data:

networks:
  minha_rede:
    driver: bridge
